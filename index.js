const crypto = require('crypto');
const dotenv = require('dotenv');
const axios = require('axios');
const TelegramBot = require('node-telegram-bot-api');
const mongoose = require('mongoose');
const https = require('https');

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
dotenv.config();

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
const TELEGRAM_TOKEN = process.env.TELEGRAM_TOKEN;
const MONGO_URI = process.env.MONGO_URI;

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
mongoose.connect(MONGO_URI)
  .then(() => console.log('MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω'))
  .catch(err => console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:', err));

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ö–µ–º –∏ –º–æ–¥–µ–ª–µ–π
const scheduleSchema = new mongoose.Schema({
  group: String,
  day: String,
  time: String,
  subject: String,
  location: String
});

const materialSchema = new mongoose.Schema({
  group: String,
  subject: String,
  title: String,
  description: String,
  fileId: String,
  date: { type: Date, default: Date.now }
});

const userSchema = new mongoose.Schema({
  userId: String,
  group: String
});

const announcementSchema = new mongoose.Schema({
  text: String,
  date: { type: Date, default: Date.now }
});

const Schedule = mongoose.model('Schedule', scheduleSchema);
const Material = mongoose.model('Material', materialSchema);
const User = mongoose.model('User', userSchema);
const Announcement = mongoose.model('Announcement', announcementSchema);

// –°–æ–∑–¥–∞–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞
const bot = new TelegramBot(TELEGRAM_TOKEN, { polling: true });

let waitingForMaterial = false;
let targetGroup = null;
let adminMode = false;
let currentAdminChatId = null;

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /menu
bot.onText(/\/menu/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, '–ú–µ–Ω—é:', {
    reply_markup: {
      keyboard: [
        ['–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ', '–ü–æ–ª–µ–∑–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏'],
        ['–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã', '–ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É'],
        ['–ù–∞—à–∏ —Ä–µ—Å—É—Ä—Å—ã', '–ü–æ–º–æ—â—å']
      ],
      resize_keyboard: true
    }
  });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"
bot.onText(/–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ/, async (msg) => {
  const userId = msg.from.id;
  const user = await User.findOne({ userId });

  if (!user) {
    bot.sendMessage(userId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤–∞—à—É –≥—Ä—É–ø–ø—É —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /start.', {
      reply_markup: {
        keyboard: [['–ù–∞–∑–∞–¥']],
        resize_keyboard: true
      }
    });
    return;
  }

  const schedules = await Schedule.find({ group: user.group });

  if (schedules.length === 0) {
    bot.sendMessage(userId, '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.', {
      reply_markup: {
        keyboard: [
          ['–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ', '–ü–æ–ª–µ–∑–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏'],
          ['–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã', '–ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É'],
          ['–ù–∞—à–∏ —Ä–µ—Å—É—Ä—Å—ã', '–ü–æ–º–æ—â—å']
        ],
        resize_keyboard: true
      }
    });
    return;
  }

  let response = `–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≥—Ä—É–ø–ø—ã ${user.group}:\n\n`;
  schedules.forEach(schedule => {
    response += `–î–µ–Ω—å: ${schedule.day}\n–í—Ä–µ–º—è: ${schedule.time}\n–ü—Ä–µ–¥–º–µ—Ç: ${schedule.subject}\n–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: ${schedule.location}\n\n`;
  });

  bot.sendMessage(userId, response, {
    reply_markup: {
      keyboard: [
        ['–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ', '–ü–æ–ª–µ–∑–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏'],
        ['–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã', '–ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É'],
        ['–ù–∞—à–∏ —Ä–µ—Å—É—Ä—Å—ã', '–ü–æ–º–æ—â—å']
      ],
      resize_keyboard: true
    }
  });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã"
bot.onText(/–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã/, async (msg) => {
  const userId = msg.from.id;
  const user = await User.findOne({ userId });

  if (!user) {
    bot.sendMessage(userId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤–∞—à—É –≥—Ä—É–ø–ø—É —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /start.', {
      reply_markup: {
        keyboard: [['–ù–∞–∑–∞–¥']],
        resize_keyboard: true
      }
    });
    return;
  }

  const materials = await Material.find({ group: user.group });

  if (materials.length === 0) {
    bot.sendMessage(userId, '–£—á–µ–±–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.', {
      reply_markup: {
        keyboard: [
          ['–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ', '–ü–æ–ª–µ–∑–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏'],
          ['–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã', '–ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É'],
          ['–ù–∞—à–∏ —Ä–µ—Å—É—Ä—Å—ã', '–ü–æ–º–æ—â—å']
        ],
        resize_keyboard: true
      }
    });
    return;
  }

  for (const material of materials) {
    if (material.fileId) {
      bot.sendDocument(userId, material.fileId, { caption: `–û–ø–∏—Å–∞–Ω–∏–µ: ${material.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}` });
    } else {
      bot.sendMessage(userId, `–û–ø–∏—Å–∞–Ω–∏–µ: ${material.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}`);
    }
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "–ü–æ–ª–µ–∑–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏"
bot.onText(/–ü–æ–ª–µ–∑–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏/, (msg) => {
  const chatId = msg.chat.id;
  const message = `
<b>–í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ª–µ–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è –≤–∞—à–µ–π —É—á–µ–±—ã:</b>
1. <a href="https://htmlbook.ru/">HTMLBook ‚Äî –∏–∑—É—á–µ–Ω–∏–µ HTML –∏ CSS</a>
2. <a href="https://gitverse.ru/">Gitverse ‚Äî –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏—Å—Ö–æ–¥–Ω—ã–º –∫–æ–¥–æ–º</a>
3. <a href="https://github.com/">GitHub ‚Äî —Ö–æ—Å—Ç–∏–Ω–≥ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏</a>
4. <a href="https://habr.com/ru/articles/">Habr ‚Äî —Å—Ç–∞—Ç—å–∏ –∏ –æ–±—Å—É–∂–¥–µ–Ω–∏—è –Ω–∞ —Ç–µ–º—ã IT</a>
`;

  bot.sendMessage(chatId, message, {
    parse_mode: 'HTML',
    disable_web_page_preview: true,
    reply_markup: {
      keyboard: [
        ['–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ', '–ü–æ–ª–µ–∑–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏'],
        ['–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã', '–ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É'],
        ['–ù–∞—à–∏ —Ä–µ—Å—É—Ä—Å—ã', '–ü–æ–º–æ—â—å']
      ],
      resize_keyboard: true
    }
  });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;

  bot.sendPhoto(chatId, 'https://iimg.su/s/19/hkFAzjwWh08fm2FBKUxsNuOReAY9C8Rng2t4UKk7.png', {
    caption: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –ú–∏—Ö–∞–π–ª–æ–≤—Å–∫–æ–≥–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ-–ø–µ–¥–∞–≥–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–ª–ª–µ–¥–∂–∞ –∏–º–µ–Ω–∏ –í.–í.–ê—Ä–Ω–∞—É—Ç–æ–≤–∞! üéìü§ñ\n–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:\n1. –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∏ —É—á–µ–±–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤.\n2. –ü–æ–ª–µ–∑–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –æ–±—É—á–µ–Ω–∏—è –Ω–∞ –≤–∞—à–µ–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏.\n3. –í–∞–∂–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –¥–ª—è —É—á–∞—â–∏—Ö—Å—è –∫–æ–ª–ª–µ–¥–∂–∞.'
  });

  bot.sendMessage(chatId, '–ú–µ–Ω—é:', {
    reply_markup: {
      keyboard: [
        ['–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ', '–ü–æ–ª–µ–∑–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏'],
        ['–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã', '–ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É'],
        ['–ù–∞—à–∏ —Ä–µ—Å—É—Ä—Å—ã', '–ü–æ–º–æ—â—å']
      ],
      resize_keyboard: true
    }
  });
});

// –ö–Ω–æ–ø–∫–∞ "–ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É"
bot.onText(/–ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É/, (msg) => {
  const chatId = msg.chat.id;

  bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É –Ω–æ–≤—É—é –≥—Ä—É–ø–ø—É:', {
    reply_markup: {
      inline_keyboard: [
        [{ text: '11–¢', callback_data: '11–¢_changeGroup' }],
        [{ text: '21–¢', callback_data: '21–¢_changeGroup' }],
        [{ text: '31–¢', callback_data: '31–¢_changeGroup' }]
      ]
    }
  });
});

bot.on('callback_query', async (callbackQuery) => {
  const data = callbackQuery.data;
  const userId = callbackQuery.from.id;
  const chatId = callbackQuery.message.chat.id;

  if (data.endsWith('_changeGroup')) {
    const newGroup = data.replace('_changeGroup', '');

    try {
      await User.findOneAndUpdate({ userId }, { group: newGroup }, { upsert: true });
      bot.sendMessage(chatId, `–í–∞—à–∞ –≥—Ä—É–ø–ø–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ ${newGroup}.`);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –≥—Ä—É–ø–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
      bot.sendMessage(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≥—Ä—É–ø–ø—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
    }
  }

  if (data === 'back_to_menu') {
    bot.sendMessage(chatId, '–ú–µ–Ω—é:', {
      reply_markup: {
        keyboard: [
          ['–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ', '–ü–æ–ª–µ–∑–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏'],
          ['–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã', '–ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É'],
          ['–ù–∞—à–∏ —Ä–µ—Å—É—Ä—Å—ã', '–ü–æ–º–æ—â—å']
        ],
        resize_keyboard: true
      }
    });
  }

  if (data.startsWith('dnwmppk_group')) {
    targetGroup = data.split('_')[2];
    waitingForMaterial = true;

    bot.sendMessage(chatId, `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª –¥–ª—è –≥—Ä—É–ø–ø—ã ${targetGroup}. –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –¥–æ–∫—É–º–µ–Ω—Ç –∏–ª–∏ –≤–ª–æ–∂–µ–Ω–∏–µ.`);
  }
});

// –ö–æ–º–∞–Ω–¥–∞ /announcements
bot.onText(/\/announcements/, async (msg) => {
  const announcements = await Announcement.find().sort({ date: -1 });

  if (announcements.length === 0) {
    bot.sendMessage(msg.chat.id, '–û–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–µ—Ç.');
    return;
  }

  const announcementsList = announcements.map(announcement => `${announcement.date.toLocaleString()} - ${announcement.text}`).join('\n\n');
  bot.sendMessage(msg.chat.id, `–û–±—ä—è–≤–ª–µ–Ω–∏—è:\n${announcementsList}`);
});

// –ö–Ω–æ–ø–∫–∞ "–ù–∞—à–∏ —Ä–µ—Å—É—Ä—Å—ã"
bot.onText(/–ù–∞—à–∏ —Ä–µ—Å—É—Ä—Å—ã/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, '–ù–∞—à–∏ —Ä–µ—Å—É—Ä—Å—ã:', {
    reply_markup: {
      inline_keyboard: [
        [{ text: '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç', url: 'https://mihppk.ru/' }],
        [{ text: '–ì—Ä—É–ø–ø–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ', url: 'https://vk.com/mih_ppk_professionalitet' }],
        [{ text: '–ù–∞–≤–∏–≥–∞—Ç–æ—Ä—ã –î–µ—Ç—Å—Ç–≤–∞', url: 'https://vk.com/mihppk_nd' }],
        [{ text: '–ù–∞–∑–∞–¥', callback_data: 'back_to_menu' }]
      ]
    }
  });
});

// –ö–Ω–æ–ø–∫–∞ "–ü–æ–º–æ—â—å"
bot.onText(/–ü–æ–º–æ—â—å/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, '–ö–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è —Å–≤—è–∑–∏:\n\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: +7 (84463) 4-28-45\nüìß Email: info@mihppk.ru\nüè¢ –ê–¥—Ä–µ—Å: —É–ª. –ì–æ–≥–æ–ª—è, –¥. 29, –ú–∏—Ö–∞–π–ª–≤–æ–∫–∞, –†–æ—Å—Å–∏—è', {
    reply_markup: {
      keyboard: [
        ['–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ', '–ü–æ–ª–µ–∑–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏'],
        ['–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã', '–ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É'],
        ['–ù–∞—à–∏ —Ä–µ—Å—É—Ä—Å—ã', '–ü–æ–º–æ—â—å']
      ],
      resize_keyboard: true
    }
  });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /admin
bot.onText(/\/admin/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û:');
  bot.once('message', (msg) => {
    const name = msg.text;
    bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:');
    bot.once('message', (msg) => {
      const password = msg.text;
      if (name === '–í–∞—Å–∏–ª—å–µ–≤ –í–ª–∞–¥–∏–º–∏—Ä –ù–∏–∫–æ–ª–∞–µ–≤–∏—á' && password === '1683') {
        adminMode = true;
        currentAdminChatId = chatId;
        bot.sendMessage(chatId, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å!', {
          reply_markup: {
            keyboard: [
              ['–î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ', '–î–æ–±–∞–≤–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª'],
              ['–î–æ–±–∞–≤–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ', '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ'],
              ['–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É', '–û—á–∏—Å—Ç–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã'],
              ['–ù–∞–∑–∞–¥']
            ],
            resize_keyboard: true
          }
        });
      } else {
        bot.sendMessage(chatId, '–ù–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è –∏–ª–∏ –ø–∞—Ä–æ–ª—å.');
      }
    });
  });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"
bot.onText(/–î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ/, (msg) => {
  const chatId = msg.chat.id;
  if (adminMode && chatId === currentAdminChatId) {
    bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –≥—Ä—É–ø–ø–∞, –¥–µ–Ω—å, –≤—Ä–µ–º—è, –ø—Ä–µ–¥–º–µ—Ç, –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ.');
    bot.once('message', async (msg) => {
      const [group, day, time, subject, location] = msg.text.split(', ');
      const newSchedule = new Schedule({ group, day, time, subject, location });
      await newSchedule.save();
      bot.sendMessage(chatId, '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ.');
    });
  } else {
    bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª"
bot.onText(/–î–æ–±–∞–≤–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª/, (msg) => {
  const chatId = msg.chat.id;
  if (adminMode && chatId === currentAdminChatId) {
    bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞:', {
      reply_markup: {
        inline_keyboard: [
          [{ text: '11–¢', callback_data: 'dnwmppk_group_11T' }],
          [{ text: '21–¢', callback_data: 'dnwmppk_group_21–¢' }],
          [{ text: '31–¢', callback_data: 'dnwmppk_group_31–¢' }]
        ]
      }
    });
  } else {
    bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞
bot.on('callback_query', (callbackQuery) => {
  const data = callbackQuery.data;
  const chatId = callbackQuery.message.chat.id;

  if (adminMode && chatId === currentAdminChatId) {
    if (data.startsWith('dnwmppk_group_')) {
      targetGroup = data.split('_')[2];
      bot.sendMessage(chatId, `–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –¥–ª—è –≥—Ä—É–ø–ø—ã ${targetGroup}, –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∞–º –º–∞—Ç–µ—Ä–∏–∞–ª (—Ç–µ–∫—Å—Ç, –¥–æ–∫—É–º–µ–Ω—Ç, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –≤–∏–¥–µ–æ):`);
      waitingForMaterial = true;
    } else if (data.startsWith('clear_group_')) {
      const targetGroup = data.split('_')[2];
      Material.deleteMany({ group: targetGroup }).then(() => {
        bot.sendMessage(chatId, `–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –≥—Ä—É–ø–ø—ã ${targetGroup} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã.`);
      }).catch((err) => {
        bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤.');
        console.error(err);
      });
    }
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã—Ö –∞–¥–º–∏–Ω–æ–º
bot.on('message', async (msg) => {
  if (waitingForMaterial && adminMode && msg.chat.id === currentAdminChatId) {
    let materialData = {
      group: targetGroup,
      description: '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'
    };

    if (msg.text) {
      materialData.type = 'text';
      materialData.title = '–¢–µ–∫—Å—Ç–æ–≤—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª';
      materialData.description = msg.text;
    } else if (msg.document) {
      materialData.type = 'document';
      materialData.title = msg.document.file_name;
      materialData.fileId = msg.document.file_id;
    } else if (msg.photo) {
      materialData.type = 'photo';
      materialData.title = '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è';
      materialData.fileId = msg.photo[msg.photo.length - 1].file_id; // –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é (—Å–∞–º—É—é –±–æ–ª—å—à—É—é) —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é
    } else if (msg.video) {
      materialData.type = 'video';
      materialData.title = '–í–∏–¥–µ–æ';
      materialData.fileId = msg.video.file_id;
    } else {
      bot.sendMessage(msg.chat.id, '–¢–∏–ø –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.');
      return;
    }

    const newMaterial = new Material(materialData);
    await newMaterial.save();

    const users = await User.find({ group: targetGroup });
    users.forEach(user => {
      if (materialData.type === 'text') {
        bot.sendMessage(user.userId, `${materialData.title}:\n${materialData.description}`);
      } else {
        bot.sendMessage(user.userId, `${materialData.title}:`);
        if (materialData.type === 'document') {
          bot.sendDocument(user.userId, materialData.fileId);
        } else if (materialData.type === 'photo') {
          bot.sendPhoto(user.userId, materialData.fileId);
        } else if (materialData.type === 'video') {
          bot.sendVideo(user.userId, materialData.fileId);
        }
      }
    });

    bot.sendMessage(currentAdminChatId, `–ú–∞—Ç–µ—Ä–∏–∞–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≥—Ä—É–ø–ø–µ ${targetGroup}.`);
    waitingForMaterial = false;
    targetGroup = null;
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã"
bot.onText(/–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã/, async (msg) => {
  const chatId = msg.chat.id;
  const user = await User.findOne({ userId: chatId });
  if (!user || !user.group) {
    bot.sendMessage(chatId, '–°–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤–∞—à—É –≥—Ä—É–ø–ø—É —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /group.');
    return;
  }

  const materials = await Material.find({ group: user.group }).sort({ date: -1 });

  if (materials.length === 0) {
    bot.sendMessage(chatId, '–î–ª—è –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –Ω–µ—Ç.');
    return;
  }

  for (const material of materials) {
    if (material.type === 'text') {
      bot.sendMessage(chatId, `${material.title}:\n${material.description}`);
    } else {
      bot.sendMessage(chatId, `${material.title}:`);
      if (material.type === 'document') {
        bot.sendDocument(chatId, material.fileId);
      } else if (material.type === 'photo') {
        bot.sendPhoto(chatId, material.fileId);
      } else if (material.type === 'video') {
        bot.sendVideo(chatId, material.fileId);
      }
    }
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û—á–∏—Å—Ç–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã"
bot.onText(/–û—á–∏—Å—Ç–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã/, (msg) => {
  const chatId = msg.chat.id;
  if (adminMode && chatId === currentAdminChatId) {
    bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤:', {
      reply_markup: {
        inline_keyboard: [
          [{ text: '11–¢', callback_data: 'clear_group_11T' }],
          [{ text: '21–¢', callback_data: 'clear_group_21–¢' }],
          [{ text: '31–¢', callback_data: 'clear_group_31–¢' }]
        ]
      }
    });
  } else {
    bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ"
bot.onText(/–î–æ–±–∞–≤–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ/, (msg) => {
  const chatId = msg.chat.id;
  if (adminMode && chatId === currentAdminChatId) {
    bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏—è:');
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º bot.on('message') —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Ñ–ª–∞–≥–∞ –¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
    const onMessageListener = (msg) => {
      if (msg.chat.id === chatId && adminMode) {
        const announcement = msg.text;
        if (!announcement) {
          bot.sendMessage(chatId, '–¢–µ–∫—Å—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.');
          return;
        }

        // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
        User.find({}).then(users => {
          users.forEach(user => {
            bot.sendMessage(user.userId, `üì¢ *–û–±—ä—è–≤–ª–µ–Ω–∏–µ* üì¢\n\n${announcement}`, { parse_mode: 'Markdown' });
          });
        }).catch(err => {
          bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è.');
          console.error(err);
        });

        bot.sendMessage(chatId, '–û–±—ä—è–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.');

        // –£–±–∏—Ä–∞–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å, —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –≤—ã–∑–æ–≤—ã
        bot.removeListener('message', onMessageListener);
      }
    };

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å –Ω–∞ –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
    bot.on('message', onMessageListener);
  } else {
    bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"
bot.onText(/–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ/, (msg) => {
  const chatId = msg.chat.id;
  if (adminMode && chatId === currentAdminChatId) {
    bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –≥—Ä—É–ø–ø–∞, –¥–µ–Ω—å.');
    bot.once('message', async (msg) => {
      const [group, day] = msg.text.split(', ');

      // –ò—â–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø–µ –∏ –¥–Ω—é
      const schedule = await Schedule.findOne({ group, day });
      if (!schedule) {
        bot.sendMessage(chatId, '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
        return;
      }

      bot.sendMessage(chatId, `–¢–µ–∫—É—â–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ: ${schedule.time}, ${schedule.subject}, ${schedule.location}\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –≤—Ä–µ–º—è, –ø—Ä–µ–¥–º–µ—Ç, –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ.`);
      bot.once('message', async (msg) => {
        const [time, subject, location] = msg.text.split(', ');

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
        schedule.time = time;
        schedule.subject = subject;
        schedule.location = location;
        await schedule.save();

        bot.sendMessage(chatId, '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ.');
      });
    });
  } else {
    bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
bot.onText(/–ù–∞–∑–∞–¥/, (msg) => {
  const chatId = msg.chat.id;
  if (adminMode && chatId === currentAdminChatId) {
    adminMode = false;
    currentAdminChatId = null;
    bot.sendMessage(chatId, '–í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.', {
      reply_markup: {
        keyboard: [
          ['–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ', '–ü–æ–ª–µ–∑–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏'],
          ['–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã', '–ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É'],
          ['–ù–∞—à–∏ —Ä–µ—Å—É—Ä—Å—ã', '–ü–æ–º–æ—â—å']
        ],
        resize_keyboard: true
      }
    });
  } else {
    bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.');
  }

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
bot.onText(/–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É/, async (msg) => {
  const chatId = msg.chat.id;
  if (adminMode && chatId === currentAdminChatId) {
    try {
      const stats = await User.aggregate([
        { $group: { _id: "$group", count: { $sum: 1 } } },
        { $sort: { _id: 1 } }
      ]);

      let statsMessage = 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≥—Ä—É–ø–ø–∞–º:\n\n';
      stats.forEach(stat => {
        statsMessage += `–ì—Ä—É–ø–ø–∞ ${stat._id}: ${stat.count} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n`;
      });

      bot.sendMessage(chatId, statsMessage);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
      bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.');
    }
  } else {
    bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.');
  }
});

});




